#compdef android
# ------------------------------------------------------------------------------
# Copyright (c) 2011 zsh-users
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the zsh-users nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL ZSH-USERS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# ------------------------------------------------------------------------------
# Description
# -----------
#
#  Completion script for the android command (Revision 12)
#  (http://developer.android.com/guide/developing/tools/android.html).
#
# ------------------------------------------------------------------------------
# Authors
# -------
#
#  * Julien Nicoulaud <julien.nicoulaud@gmail.com>
#
# ------------------------------------------------------------------------------
# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et
# ------------------------------------------------------------------------------


typeset -A opt_args
local context state line curcontext="$curcontext" android_cmd

_android() {
  local ret=1
  
  android_cmd="$words[1]"

  # TODO -h takes an optional command name
  _arguments -C -A "-*" \
    '(- : *)'{-h,--help}'[get help on a specific command]' \
    '(-s --silent -v --verbose)'{-v,--verbose}'[verbose mode: errors, warnings and informational messages are printed]' \
    '(-v --verbose -s --silent)'{-s,--silent}'[silent mode: only errors are printed out]' \
    '1: :_android_cmds' \
    '*::arg:->args' \
  && ret=0

  case "$state" in
    (args)
      curcontext="${curcontext%:*:*}:android-cmd-$words[1]:"
      case $words[1] in
        (list)
          _arguments \
            '1: :_android_list_entities' \
          && ret=0
          # TODO Options:
          # Action "list ":
          #   Lists existing targets or virtual devices.
          # Options:
          #   No options
          # 
          # Action "list avd":
          #   Lists existing Android Virtual Devices.
          # Options:
          #   -0 --null     Terminates lines with \0 instead of \n (e.g. for xargs -0). Only used by --compact.
          #   -c --compact  Compact output (suitable for scripts)
          # 
          # Action "list target":
          #   Lists existing targets.
          # Options:
          #   -0 --null     Terminates lines with \0 instead of \n (e.g. for xargs -0) Only used by --compact.
          #   -c --compact  Compact output (suitable for scripts)
          # 
          # Action "list sdk":
          #   Lists remote SDK repository.
          # Options:
          #   -o --obsolete   Installs obsolete packages
          #      --proxy-host HTTP/HTTPS proxy host (overrides settings if defined)
          #      --proxy-port HTTP/HTTPS proxy port (overrides settings if defined)
          #   -s --no-https   Uses HTTP instead of HTTPS (the default) for downloads
          #   -u --no-ui      Displays list result on console (no GUI) [Default: true]
        ;;
        (create)
          _arguments \
            '1: :_android_create_entities' \
          && ret=0
          # TODO Options:
          # Action "create avd":
          #   Creates a new Android Virtual Device.
          # Options:
          #   -c --sdcard   Path to a shared SD card image, or size of a new sdcard for the new AVD
          #   -n --name     Name of the new AVD [required]
          #   -a --snapshot Place a snapshots file in the AVD, to enable persistence.
          #   -p --path     Directory where the new AVD will be created
          #   -f --force    Forces creation (overwrites an existing AVD)
          #   -s --skin     Skin for the new AVD
          #   -t --target   Target ID of the new AVD [required]
          # 
          # Action "create project":
          #   Creates a new Android project.
          # Options:
          #   -n --name     Project name
          #   -t --target   Target ID of the new project [required]
          #   -p --path     The new project's directory [required]
          #   -k --package  Android package name for the application [required]
          #   -a --activity Name of the default Activity that is created [required]
          # 
          # Action "create test-project":
          #   Creates a new Android project for a test package.
          # Options:
          #   -p --path     The new project's directory [required]
          #   -n --name     Project name
          #   -m --main     Path to directory of the app under test, relative to the test project directory [required]
          # 
          # Action "create lib-project":
          #   Creates a new Android library project.
          # Options:
          #   -n --name     Project name
          #   -t --target   Target ID of the new project [required]
          #   -k --package  Android package name for the library [required]
          #   -p --path     The new project's directory [required]
        ;;
        (update)
          _arguments \
            '1: :_android_update_entities' \
          && ret=0
          # TODO Options:
          # Action "update avd":
          #   Updates an Android Virtual Device to match the folders of a new SDK.
          # Options:
          #   -n --name     Name of the AVD to update [required]
          # 
          # Action "update project":
          #   Updates an Android project (must already have an AndroidManifest.xml).
          # Options:
          #   -l --library     Directory of an Android library to add, relative to this project's directory
          #   -p --path        The project's directory [required]
          #   -n --name        Project name
          #   -t --target      Target ID to set for the project
          #   -s --subprojects Also updates any projects in sub-folders, such as test projects.
          # 
          # Action "update test-project":
          #   Updates the Android project for a test package (must already have an AndroidManifest.xml).
          # Options:
          #   -m --main     Directory of the app under test, relative to the test project directory [required]
          #   -p --path     The project's directory [required]
          # 
          # Action "update lib-project":
          #   Updates an Android library project (must already have an AndroidManifest.xml).
          # Options:
          #   -p --path     The project's directory [required]
          #   -t --target   Target ID to set for the project
          # 
          # Action "update adb":
          #   Updates adb to support the USB devices declared in the SDK add-ons.
          # Options:
          #   No options
          # 
          # Action "update sdk":
          #   Updates the SDK by suggesting new platforms to install if available.
          # Options:
          #      --proxy-port HTTP/HTTPS proxy port (overrides settings if defined)
          #      --proxy-host HTTP/HTTPS proxy host (overrides settings if defined)
          #   -s --no-https   Uses HTTP instead of HTTPS (the default) for downloads
          #   -f --force      Forces replacement of a package or its parts, even if something has been modified
          #   -u --no-ui      Updates from command-line (does not display the GUI)
          #   -o --obsolete   Installs obsolete packages
          #   -t --filter     A filter that limits the update to the specified types of packages in the form of
          #                   a comma-separated list of [platform, tool, platform-tool, doc, sample, extra]
          #   -n --dry-mode   Simulates the update but does not download or install anything
        ;;
        (move)
          _arguments \
            '1: :_android_move_entities' \
          && ret=0
          # TODO Options:
          # Action "move avd":
          #   Moves or renames an Android Virtual Device.
          # Options:
          #   -p --path     Path to the AVD's new directory
          #   -n --name     Name of the AVD to move or rename [required]
          #   -r --rename   New name of the AVD
        ;;
        (delete)
          _arguments \
            '1: :_android_delete_entities' \
          && ret=0
          # TODO Options:
          # Action "delete avd":
          #   Deletes an Android Virtual Device.
          # Options:
          #   -n --name     Name of the AVD to delete [required]
        ;;
        (display)
          _arguments \
            '1: :_android_display_entities' \
          && ret=0
        ;;
      esac
    ;;
  esac

  return ret
}

(( $+functions[_android_cmds] )) ||
_android_cmds() {
  local commands; commands=(
    'list:list existing targets or virtual devices'
    'create:create new virtual devices or projects'
    'update:update a virtual device, project, SDK or adb'
    'move:move a virtual device'
    'delete:delete a virtual device'
    'display:display manager windows'
  )
  _describe -t commands 'command' commands "$@"
}

(( $+functions[_android_list_entities] )) ||
_android_list_entities() {
  local entities; entities=(
    'avd:list existing Android Virtual Devices'
    'target:list existing targets'
    'sdk:list remote SDK repository'
  )
  _describe -t entities 'entity' entities "$@"
}

(( $+functions[_android_create_entities] )) ||
_android_create_entities() {
  local entities; entities=(
    'avd:create a new Android Virtual Device'
    'project:create a new Android project'
    'test-project:create a new Android project for a test package'
    'lib-project:create a new Android library project'
  )
  _describe -t entities 'entity' entities "$@"
}

(( $+functions[_android_update_entities] )) ||
_android_update_entities() {
  local entities; entities=(
    'avd:update an Android Virtual Device to match the folders of a new SDK'
    'project:update an Android project'
    'test-project:update the Android project for a test package'
    'lib-project:update an Android library project'
    'adb:update adb to support the USB devices declared in the SDK add-ons'
    'sdk:update the SDK by suggesting new platforms to install if available'
  )
  _describe -t entities 'entity' entities "$@"
}

(( $+functions[_android_move_entities] )) ||
_android_move_entities() {
  local entities; entities=(
    'avd:move or rename an Android Virtual Device'
  )
  _describe -t entities 'entity' commands "$@"
}

(( $+functions[_android_delete_entities] )) ||
_android_delete_entities() {
  local entities; entities=(
    'avd:delete an Android Virtual Device'
  )
  _describe -t entities 'entity' entities "$@"
}

(( $+functions[_android_display_entities] )) ||
_android_display_entities() {
  local entities; entities=(
    'sdk:display the SDK Manager window'
    'avd:display the AVD Manager window'
  )
  _describe -t entities 'entity' entities "$@"
}

_android "$@"
